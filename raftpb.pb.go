// Code generated by protoc-gen-go.
// source: raftpb.proto
// DO NOT EDIT!

/*
Package lilraft is a generated protocol buffer package.

It is generated from these files:
	raftpb.proto

It has these top-level messages:
	LogEntry
	AppendEntriesRequest
	AppendEntriesResponse
	RequestVoteRequest
	RequestVoteResponse
*/
package lilraft

import proto "github.com/golang/protobuf/proto"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = math.Inf

type LogEntry struct {
	Index            *int64  `protobuf:"varint,1,req" json:"Index,omitempty"`
	Term             *int64  `protobuf:"varint,2,req" json:"Term,omitempty"`
	CommandName      *string `protobuf:"bytes,3,req" json:"CommandName,omitempty"`
	Command          []byte  `protobuf:"bytes,4,opt" json:"Command,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *LogEntry) Reset()         { *m = LogEntry{} }
func (m *LogEntry) String() string { return proto.CompactTextString(m) }
func (*LogEntry) ProtoMessage()    {}

func (m *LogEntry) GetIndex() int64 {
	if m != nil && m.Index != nil {
		return *m.Index
	}
	return 0
}

func (m *LogEntry) GetTerm() int64 {
	if m != nil && m.Term != nil {
		return *m.Term
	}
	return 0
}

func (m *LogEntry) GetCommandName() string {
	if m != nil && m.CommandName != nil {
		return *m.CommandName
	}
	return ""
}

func (m *LogEntry) GetCommand() []byte {
	if m != nil {
		return m.Command
	}
	return nil
}

type AppendEntriesRequest struct {
	LeaderID         *int32      `protobuf:"varint,1,req" json:"LeaderID,omitempty"`
	Term             *int64      `protobuf:"varint,2,req" json:"Term,omitempty"`
	PrevLogIndex     *int64      `protobuf:"varint,3,req" json:"PrevLogIndex,omitempty"`
	PrevLogTerm      *int64      `protobuf:"varint,4,req" json:"PrevLogTerm,omitempty"`
	CommitIndex      *int64      `protobuf:"varint,5,req" json:"CommitIndex,omitempty"`
	Entries          []*LogEntry `protobuf:"bytes,6,rep" json:"Entries,omitempty"`
	XXX_unrecognized []byte      `json:"-"`
}

func (m *AppendEntriesRequest) Reset()         { *m = AppendEntriesRequest{} }
func (m *AppendEntriesRequest) String() string { return proto.CompactTextString(m) }
func (*AppendEntriesRequest) ProtoMessage()    {}

func (m *AppendEntriesRequest) GetLeaderID() int32 {
	if m != nil && m.LeaderID != nil {
		return *m.LeaderID
	}
	return 0
}

func (m *AppendEntriesRequest) GetTerm() int64 {
	if m != nil && m.Term != nil {
		return *m.Term
	}
	return 0
}

func (m *AppendEntriesRequest) GetPrevLogIndex() int64 {
	if m != nil && m.PrevLogIndex != nil {
		return *m.PrevLogIndex
	}
	return 0
}

func (m *AppendEntriesRequest) GetPrevLogTerm() int64 {
	if m != nil && m.PrevLogTerm != nil {
		return *m.PrevLogTerm
	}
	return 0
}

func (m *AppendEntriesRequest) GetCommitIndex() int64 {
	if m != nil && m.CommitIndex != nil {
		return *m.CommitIndex
	}
	return 0
}

func (m *AppendEntriesRequest) GetEntries() []*LogEntry {
	if m != nil {
		return m.Entries
	}
	return nil
}

type AppendEntriesResponse struct {
	Term             *int64 `protobuf:"varint,1,req" json:"Term,omitempty"`
	Success          *bool  `protobuf:"varint,2,req" json:"Success,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *AppendEntriesResponse) Reset()         { *m = AppendEntriesResponse{} }
func (m *AppendEntriesResponse) String() string { return proto.CompactTextString(m) }
func (*AppendEntriesResponse) ProtoMessage()    {}

func (m *AppendEntriesResponse) GetTerm() int64 {
	if m != nil && m.Term != nil {
		return *m.Term
	}
	return 0
}

func (m *AppendEntriesResponse) GetSuccess() bool {
	if m != nil && m.Success != nil {
		return *m.Success
	}
	return false
}

type RequestVoteRequest struct {
	CandidateID      *int32 `protobuf:"varint,1,req" json:"CandidateID,omitempty"`
	Term             *int64 `protobuf:"varint,2,req" json:"Term,omitempty"`
	LastLogIndex     *int64 `protobuf:"varint,3,req" json:"LastLogIndex,omitempty"`
	LastLogTerm      *int64 `protobuf:"varint,4,req" json:"LastLogTerm,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *RequestVoteRequest) Reset()         { *m = RequestVoteRequest{} }
func (m *RequestVoteRequest) String() string { return proto.CompactTextString(m) }
func (*RequestVoteRequest) ProtoMessage()    {}

func (m *RequestVoteRequest) GetCandidateID() int32 {
	if m != nil && m.CandidateID != nil {
		return *m.CandidateID
	}
	return 0
}

func (m *RequestVoteRequest) GetTerm() int64 {
	if m != nil && m.Term != nil {
		return *m.Term
	}
	return 0
}

func (m *RequestVoteRequest) GetLastLogIndex() int64 {
	if m != nil && m.LastLogIndex != nil {
		return *m.LastLogIndex
	}
	return 0
}

func (m *RequestVoteRequest) GetLastLogTerm() int64 {
	if m != nil && m.LastLogTerm != nil {
		return *m.LastLogTerm
	}
	return 0
}

type RequestVoteResponse struct {
	Term             *int64 `protobuf:"varint,1,req" json:"Term,omitempty"`
	VoteGranted      *bool  `protobuf:"varint,2,req" json:"VoteGranted,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *RequestVoteResponse) Reset()         { *m = RequestVoteResponse{} }
func (m *RequestVoteResponse) String() string { return proto.CompactTextString(m) }
func (*RequestVoteResponse) ProtoMessage()    {}

func (m *RequestVoteResponse) GetTerm() int64 {
	if m != nil && m.Term != nil {
		return *m.Term
	}
	return 0
}

func (m *RequestVoteResponse) GetVoteGranted() bool {
	if m != nil && m.VoteGranted != nil {
		return *m.VoteGranted
	}
	return false
}

func init() {
}
